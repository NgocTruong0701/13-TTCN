@model PhieuBai_3.Models.product

@{
    ViewBag.Title = "Edit";
    var ImagePath = "~/Images/" + Model.image;
}

<h2>Thong tin sua san pham</h2>


@using (Html.BeginForm("Edit", "products", FormMethod.Post, new { enctype = "multipart/from-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>San pham</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.proid)

        <div class="form-group">
            @Html.LabelFor(model => model.proname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.proname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.proname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.stock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.stock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.stock, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img id="output" class="img-thumbnail" alt="anh" width="180" height="200" src="@Url.Content(ImagePath)" />
                <p><label for="ufile" style="cursor:pointer" >Chon anh</label></p>
                <input id="ufile" name="ImageFile" type="file" style="display:none" onchange="loadFile(event)" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.catid, "Danh muc", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("catid", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.catid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Luu" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@if (ViewBag.Error != null)
{
    <div class="alert alert-danger" role="alert">@ViewBag.Error</div>
}

<script>
    var loadFile = function (event) {
        var image = document.getElementById('output');
        image.src = URL.createObjectURL(event.target.files[0]);
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
